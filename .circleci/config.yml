---
version: 2.1
executors:
  oawaiver-executor:
    docker:
      - image: cimg/ruby:2.7-node
        environment:
          BUNDLER_VERSION: 2.2.17
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          APP_DB_HOST: 0.0.0.0
          APP_SOLR_HOST: 0.0.0.0
      - image: postgres:10
        environment:
          POSTGRES_USER: oawaiver
          POSTGRES_DB: oawaiver_test
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: solr:8.4
        command: bin/solr -cloud -noprompt -f -p 8983
      - image: mailhog/mailhog:latest

    working_directory: ~/oawaiver

commands:
  setup-bundler:
    description: "Install correct version of bundler and load from cache or bundle install"
    steps:
      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - oawaiver-ruby27-{{ checksum "Gemfile.lock" }}
            - oawaiver-ruby27-
      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: oawaiver-ruby27-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  setup-node:
    description: "Install correct version of node.js and load from cache or yarn install"
    steps:
      # Restore yarn cache
      - restore_cache:
          keys:
            - oawaiver-node14-{{ checksum "yarn.lock" }}
            - oawaiver-node14-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: oawaiver-node14-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

  setup-solr:
    description: "Create the Solr configurations"
    steps:
      - run:
          name: Configure the Solr Configset
          command: |
            cd solr/solr_core/conf
            zip -1 -r solr_config.zip ./*
            curl -H "Content-Type: application/octet-stream" --data-binary @solr_config.zip "http://localhost:8983/solr/admin/configs?action=UPLOAD&name=oawaiver"
            curl -H 'Content-Type: application/json' http://localhost:8983/api/collections/ -d '{create: {name: oawaiver-core-test, config: oawaiver, numShards: 1}}'

jobs:
  build:
    executor: oawaiver-executor
    steps:
      - attach_workspace:
          at: '~/oawaiver'
      - checkout
      - setup-bundler
      - setup-node

      - persist_to_workspace:
          root: '~/oawaiver'
          paths: '*'

  lint:
    executor: oawaiver-executor
    steps:
      - attach_workspace:
          at: '~/oawaiver'
      - setup-bundler

      - run:
          name: Lint using RuboCop
          command: bundle exec rubocop --disable-pending-cops

  test:
    executor: oawaiver-executor
    steps:
      - attach_workspace:
          at: '~/oawaiver'
      - setup-bundler
      - setup-node
      # This is required for `rails db:schema:load`
      - run: sudo apt-get update
      - run: sudo apt-get install -y postgresql-client || true
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Wait for Solr
          command: dockerize -wait tcp://localhost:8983 -timeout 1m
      - setup-solr

      - run:
          name: Execute the test suites using RSpec
          command: bundle exec rspec

workflows:
  ci:
    jobs:
      - build
      - lint:
          requires:
            - build
      - test:
          requires:
            - build
