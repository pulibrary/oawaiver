<script>
    AjaxAutoCompleter.prototype.log = function (e) {
    };

    function AjaxAutoCompleter(params) {
        this.url = params.url;
        this.match_params = params.match_params;
        this.select_element = params.select_element;
        this.display_element = params.display_element;
        this.min_length = params.min_length;
        this.label_property = params.label_property;
        this.result_properties = params.result_properties;
    }

    AjaxAutoCompleter.builder = function (params) {
        var completer = new AjaxAutoCompleter(params);
        completer.log("builder: " + params['url']);
        $(params.select_element).data("ajax_completer", completer).
                val("").
                autocomplete({
                    minLength: completer.min_length,
                    source: completer.query_data,
                    select: completer.select_callback
                });
        return completer;
    }

    AjaxAutoCompleter.prototype.query_data = function (query, callback) {
        var term = query.term;
        var completer = this.element.data("ajax_completer");
        if (term) {
            completer.set_element_with_ajax_result({});
            var query_params = completer.match_params.replace("MATCH", term);
            completer.log("query_data " + completer.url + "?" + query_params);
            completer.set_element_with_ajax_result({});
            $.ajax({
                url: completer.url,
                data: query_params,
                dataType: 'jsonp',
                success: function (response, xhr) {
                    results = response;
                    if (results.length > 0) {
                        for (var i = 0; i < results.length; i++) {
                            results[i].label = results[i][completer.label_property];
                        }
                    } else {
                        completer.set_element_with_ajax_result({});
                    }
                    callback(results);
                },
                error: function () {
                    callback([]);
                }
            });
        } else {
            completer.log("query_data term empty");
        }
    };

    AjaxAutoCompleter.prototype.select_callback = function (event, ui) {
        var completer = $(this).data("ajax_completer");
        completer.log("select_callback");
        var ajax_data = ui.item;
        completer.set_element_with_ajax_result(ajax_data);
    }


    AjaxAutoCompleter.Solr_props = ["unique_id"];

    AjaxAutoCompleter.prototype.set_element_with_ajax_result = function (ajax_data) {
        this.log("set_element_with_ajax_result " + ($.isEmptyObject(ajax_data) ? "{}" : JSON.stringify(ajax_data)));
        var data_dest = this.display_element;
        var ajax_keys = this.result_properties;

        for (var i = 0; i < ajax_keys.length; i++) {
            var ajax_prop = ajax_keys[i];
            var elements = $(data_dest + " ." + ajax_prop);
            var text = ajax_data[ajax_prop];
            if (!text) {
                text = "";
            }
            for (var eli in elements) {
                var el = elements[eli];
                // determine whether to use val or text fct to assign text value
                if (el.form == undefined) {
                    el.textContent = text;
                } else {
                    el.value = text;
                }
            }
        }
    }


</script>

<% if not @post.empty? then %>
    <h3> Submitted Values: </h3>

    <% [:first, :last, :bestName, :dept, :uid, :account, :email].each do |prop| %>
        <div classs="left" style="font-size: small">
          <%= content_tag(:strong, prop.to_s + ": ") %>
          <%= content_tag(:span, @post[prop], :class => prop) %>
          <br/>
        </div>
    <% end %>

    <h2> Search Again </h2>
<% else %>
    <h2> Search </h2>
<% end %>


<% if (@style == 'form') then %>
    <h4> Visible Disabled Form Fields </h4>
<% else %>
    <h4> Hidden Form Fields </h4>
<% end %>


<table>
  <tr>
    <td style="min-width: 25em;">
      <form id="ajax_form">
        <label>Type Employee Name </label>

        <div class="ui-widget">
          <%= content_tag(:input, "",
                          :id => "select_with_ajax",
                          :placeholder => "Enter Name") %>
        </div>

        &nbsp; <br/>

        <div id="display_ajax_data">

          <% if (@style == 'form') then %>
              <% [[:first, :first_name],
                  [:last, :last_name],
                  [:bestName, :preferred_name],
                  [:dept, :department],
                  [:uid, :unique_id],
                  [:account, :netid],
                  [:email, :email]].each do |prop, ajax_prop| %>
                  <div class="field ajax">
                    <%= content_tag(:label, prop) %>
                    <%= content_tag(:input, "",
                                    :class => ajax_prop, :type => "text",
                                    :disabled => "disabled",
                                    :name => "post[#{prop}]") %>
                  </div>
              <% end %>
          <% else %>
              <% [[:first, :first_name],
                  [:last, :last_name],
                  [:bestName, :preferred_name],
                  [:dept, :department],
                  [:uid, :unique_id],
                  [:account, :netid],
                  [:email, :email]].each do |prop, ajax_prop| %>
                  <div classs="left">
                    <%= content_tag(:strong, prop.to_s + ": ") %>
                    <%= content_tag(:span, "", :class => ajax_prop) %>
                    <br/>
                    <%= content_tag(:input, "", :class => ajax_prop,
                                    :type => "hidden",
                                    :name => "post[#{prop}]") %>
                  </div>
              <% end %>
          <% end %>
        </div>
        <br/>

        <%= content_tag(:input, "",
                        :type => 'submit',
                        :value => "Submit Data",
                        :action => ajax_search_employees_url(@style)) %>
      </form>
    </td>
    <td id="log" style="font-size: small; max-width: 80%;">
    </td>
  </tr>
</table>



<script>
    AjaxAutoCompleter.prototype.log = function (e) {
        try {
            if (e.length > 160) {
                e = e.substring(0, 500) + " ...";
            }
            $("#log").prepend(("AjaxAutoCompleter." + e) + "<br/>");
        }
        catch (er) {
        }
    }

    function init_page() {
        var params = {
            url: (window.location.origin + "/api/employees/get_all/name.json"),
            match_params: "search_term=MATCH",
            select_element: "#select_with_ajax",
            display_element: "#display_ajax_data",
            result_properties: ['first_name', 'last_name', 'preferred_name', 'department', 'unique_id', 'netid', 'email'],
            label_property: 'preferred_name',
            min_length: 2
        };
        <% if (@style == 'form') then %>
        $("#ajax_form").submit(function () {
            // make sure all field values are posted
            $("#display_ajax_data input").attr("disabled", false);
            return;
        });
        <% end %>

        AjaxAutoCompleter.builder(params);
    }

    $(document).ready(init_page);
</script>
